version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - BEDROCK_PRIMARY_MODEL=${BEDROCK_PRIMARY_MODEL:-anthropic.claude-3-haiku-20240307-v1:0}
      - BEDROCK_FALLBACK_MODEL=${BEDROCK_FALLBACK_MODEL:-anthropic.claude-3-haiku-20240307-v1:0}
      - API_V1_STR=${API_V1_STR:-/api/v1}
      - PROJECT_NAME=${PROJECT_NAME:-Co-Intelligence GenAI Universe}
      - VERSION=${VERSION:-2.0.0}
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}
      - HOST_IP=${HOST_IP:-localhost}
      - PUBLIC_IP=${PUBLIC_IP:-localhost}
    volumes:
      - ./config:/app/config
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./react-frontend/src:/app/src
      - ./config:/app/config
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000/api/v1}
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL:-http://localhost:8000}
      - REACT_APP_AI_CHAT_URL=${REACT_APP_AI_CHAT_URL:-http://localhost:8501}
      - REACT_APP_DOCUMENT_ANALYSIS_URL=${REACT_APP_DOCUMENT_ANALYSIS_URL:-http://localhost:8502}
      - REACT_APP_WEB_SEARCH_URL=${REACT_APP_WEB_SEARCH_URL:-http://localhost:8503}
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}
      - HOST_IP=${HOST_IP:-localhost}
      - PUBLIC_IP=${PUBLIC_IP:-localhost}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Chat HTMX App
  ai-chat:
    build:
      context: ./htmx-apps
      dockerfile: Dockerfile
    ports:
      - "8501:8501"
    environment:
      - PORT=8501
      - API_BASE_URL=http://backend:8000
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}
      - HOST_IP=${HOST_IP:-localhost}
      - PUBLIC_IP=${PUBLIC_IP:-localhost}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Document Analysis HTMX App
  document-analysis:
    build:
      context: ./htmx-apps
      dockerfile: Dockerfile
    ports:
      - "8502:8502"
    environment:
      - PORT=8502
      - API_BASE_URL=http://backend:8000
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}
      - HOST_IP=${HOST_IP:-localhost}
      - PUBLIC_IP=${PUBLIC_IP:-localhost}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8502/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Search HTMX App
  web-search:
    build:
      context: ./htmx-apps
      dockerfile: Dockerfile
    ports:
      - "8503:8503"
    environment:
      - PORT=8503
      - API_BASE_URL=http://backend:8000
      - DEPLOYMENT_ENV=${DEPLOYMENT_ENV:-local}
      - HOST_IP=${HOST_IP:-localhost}
      - PUBLIC_IP=${PUBLIC_IP:-localhost}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8503/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
